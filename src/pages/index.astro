---
import Layout from '~/layouts/Layout.astro'
import { getSortedPosts } from '~/utils'
import { getCollection, render } from 'astro:content'
import PostPreview from '~/components/PostPreview.astro'
import Pagination from '~/components/Pagination.astro'
import BlockHeader from '~/components/BlockHeader.astro'
import HomeBanner from '~/components/HomeBanner.astro'
import siteConfig from '~/site.config'
import TagsSection from '~/components/TagsSection.astro'
import SeriesSection from '~/components/SeriesSection.astro'
import { turkishSlugify } from '~/utils/slugify'

const home = await getCollection('home')
let HomeContent
let homeAvatarImage
let homeGithubCalendar
if (home.length > 0) {
  const homeEntry = home[0]
  const { Content } = await render(homeEntry)
  HomeContent = Content
  homeAvatarImage = homeEntry.data.avatarImage
  homeGithubCalendar = homeEntry.data.githubCalendar
}
const sortedPosts = await getSortedPosts()
const postsHaveTags = sortedPosts.some(
  (post) => post.data.tags && post.data.tags.length > 0,
)
const seriesMap = new Map<string, { name: string; count: number; slug: string }>()
for (const post of sortedPosts) {
  const seriesName = post.data.series
  if (!seriesName) continue
  const slug = turkishSlugify(seriesName)
  const existing = seriesMap.get(slug)
  if (existing) {
    existing.count += 1
  } else {
    seriesMap.set(slug, { name: seriesName, slug, count: 1 })
  }
}
const seriesList = Array.from(seriesMap.values()).sort((a, b) => b.count - a.count)
---

<Layout>
  {
    HomeContent && (
      <HomeBanner avatarImage={homeAvatarImage} githubCalendar={homeGithubCalendar}>
        <HomeContent />
      </HomeBanner>
    )
  }
  {
    seriesList.length > 0 && (
      <>
        <BlockHeader>Seriler</BlockHeader>
        <SeriesSection series={seriesList} />
      </>
    )
  }
  {
    postsHaveTags && (
      <>
        <BlockHeader>Etiketler</BlockHeader>
        <TagsSection posts={sortedPosts} />
      </>
    )
  }
  {
    sortedPosts.length > 0 && (
      <>
        <section id="posts">
          <BlockHeader>Son Yazılar</BlockHeader>
          {sortedPosts.slice(0, siteConfig.pageSize).map((post) => (
            <PostPreview post={post} />
          ))}
        </section>
        <Pagination nextLink="/archive" nextText="Arşiv" />
      </>
    )
  }
</Layout>

<style is:global>
  a.heading-anchor {
    display: none !important;
  }
</style>
